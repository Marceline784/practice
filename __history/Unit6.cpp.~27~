//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit6.h"
#include "Unit3.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "HTMLabel"
#pragma link "AdvGlowButton"
#pragma link "AdvPanel"
#pragma link "AdvScrollBox"
#pragma resource "*.dfm"
TForm6 *Form6;
//---------------------------------------------------------------------------
__fastcall TForm6::TForm6(TComponent* Owner)
	: TForm(Owner)
{
Form6->Color = (TColor)0x1E1E1E;
Image2->Picture->LoadFromFile("D:\\Документи\\Практика\\arrow.png");
AdvScrollBox1->VertScrollBar->Position = 0;
TAdvPanel* panels[] = { AdvPanel1, AdvPanel2, AdvPanel3, AdvPanel4, AdvPanel5, AdvPanel6 };
for (int i = 0; i < 6; i++) {
	panels[i]->Color = (TColor)0x1E1E1E;
	panels[i]->Visible = false;
}



Image3->Picture->LoadFromFile("D:\\Документи\\Практика\\cancel.png");
Image4->Picture->LoadFromFile("D:\\Документи\\Практика\\aperol.png");
Image5->Picture->LoadFromFile("D:\\Документи\\Практика\\strwpn.png");
Image6->Picture->LoadFromFile("D:\\Документи\\Практика\\cancel.png");
Image7->Picture->LoadFromFile("D:\\Документи\\Практика\\pncolada.png");
Image8->Picture->LoadFromFile("D:\\Документи\\Практика\\cancel.png");
Image9->Picture->LoadFromFile("D:\\Документи\\Практика\\shot.png");
Image10->Picture->LoadFromFile("D:\\Документи\\Практика\\cancel.png");
Image11->Picture->LoadFromFile("D:\\Документи\\Практика\\bellini.png");
Image12->Picture->LoadFromFile("D:\\Документи\\Практика\\cancel.png");
Image13->Picture->LoadFromFile("D:\\Документи\\Практика\\clover.png");
Image14->Picture->LoadFromFile("D:\\Документи\\Практика\\cancel.png");
Image1->Picture->LoadFromFile("D:\\Документи\\Практика\\minus.png");
Image15->Picture->LoadFromFile("D:\\Документи\\Практика\\plus.png");
Image16->Picture->LoadFromFile("D:\\Документи\\Практика\\minus.png");
Image17->Picture->LoadFromFile("D:\\Документи\\Практика\\plus.png");
Image18->Picture->LoadFromFile("D:\\Документи\\Практика\\minus.png");
Image19->Picture->LoadFromFile("D:\\Документи\\Практика\\plus.png");
Image20->Picture->LoadFromFile("D:\\Документи\\Практика\\minus.png");
Image21->Picture->LoadFromFile("D:\\Документи\\Практика\\plus.png");
Image22->Picture->LoadFromFile("D:\\Документи\\Практика\\minus.png");
Image23->Picture->LoadFromFile("D:\\Документи\\Практика\\plus.png");
Image24->Picture->LoadFromFile("D:\\Документи\\Практика\\minus.png");
Image25->Picture->LoadFromFile("D:\\Документи\\Практика\\plus.png");
AdvPanel1->Tag = 2;
AdvPanel2->Tag = 1;
AdvPanel3->Tag = 3;
AdvPanel4->Tag = 4;
AdvPanel5->Tag = 5;
AdvPanel6->Tag = 6;
 UpdateTotal();
}
//---------------------------------------------------------------------------
void __fastcall TForm6::Image2Click(TObject *Sender)
{
	Form3->Show();
	this->Hide();
}
//---------------------------------------------------------------------------
void __fastcall TForm6::AddToCart(int id) {
	for (auto& item : cartItems) {
		if (item.id == id) {
			item.quantity++;

			for (int i = 0; i < item.panel->ControlCount; i++) {
				if (item.panel->Controls[i]->InheritsFrom(__classid(TLabel))) {
					TLabel* lbl = dynamic_cast<TLabel*>(item.panel->Controls[i]);
					lbl->Caption = IntToStr(item.quantity);
					break;
				}
			}

			UpdateTotal();
			return;
		}
	}

	TAdvPanel* panel = nullptr;
	for (int i = 1; i <= 6; i++) {
		TAdvPanel* p = dynamic_cast<TAdvPanel*>(FindComponent("AdvPanel" + IntToStr(i)));
		if (p && p->Tag == id) {
			panel = p;
			break;
		}
	}

	if (!panel) {
		ShowMessage("Панель не знайдена для id = " + IntToStr(id));
		return;
	}

	try {
		Form3->ADOQuery1->Close();
		Form3->ADOQuery1->SQL->Text = "SELECT Назва, Ціна FROM Напій WHERE Напій = :id";
		Form3->ADOQuery1->Parameters->ParamByName("id")->Value = id;
		Form3->ADOQuery1->Open();

		if (Form3->ADOQuery1->Eof) {
			ShowMessage("Напій не знайдено в БД");
			return;
		}

		String name = Form3->ADOQuery1->FieldByName("Назва")->AsString;
		double price = Form3->ADOQuery1->FieldByName("Ціна")->AsFloat;

		for (int i = 0; i < panel->ControlCount; i++) {
			if (panel->Controls[i]->InheritsFrom(__classid(TLabel))) {
				TLabel* lbl = dynamic_cast<TLabel*>(panel->Controls[i]);
				lbl->Caption = "1";
				break;
			}
		}

		panel->Visible = true;

		cartItems.push_back({id, name, price, 1, panel});
		UpdateTotal();
	}
	catch (const Exception& e) {
		ShowMessage("Помилка читання з БД: " + e.Message);
	}
}


void __fastcall TForm6::UpdateTotal() {
	double total = 0;

	for (auto& item : cartItems) {
		if (item.panel->Visible) {
			total += item.quantity * item.price;
		}
	}
	Label7->Caption = "Сума: " + FloatToStrF(total, ffFixed, 8, 2) + " грн";
}
void __fastcall TForm6::PlusClick(TObject *Sender) {
	TImage* img = dynamic_cast<TImage*>(Sender);
	if (!img || !img->Parent) return;

	TAdvPanel* panel = dynamic_cast<TAdvPanel*>(img->Parent);
	if (!panel) return;

	for (auto& item : cartItems) {
		if (item.panel == panel) {
			item.quantity++;

			for (int i = 0; i < panel->ControlCount; i++) {
				if (panel->Controls[i]->InheritsFrom(__classid(TLabel))) {
					TLabel* lbl = dynamic_cast<TLabel*>(panel->Controls[i]);
					lbl->Caption = IntToStr(item.quantity);
					break;
				}
			}
			break;
		}
	}
	UpdateTotal();
}
void __fastcall TForm6::MinusClick(TObject *Sender) {
	TImage* img = dynamic_cast<TImage*>(Sender);
	if (!img || !img->Parent) return;

	TAdvPanel* panel = dynamic_cast<TAdvPanel*>(img->Parent);
	if (!panel) return;

	for (auto& item : cartItems) {
		if (item.panel == panel && item.quantity > 1) {
			item.quantity--;

			for (int i = 0; i < panel->ControlCount; i++) {
				if (panel->Controls[i]->InheritsFrom(__classid(TLabel))) {
					TLabel* lbl = dynamic_cast<TLabel*>(panel->Controls[i]);
					lbl->Caption = IntToStr(item.quantity);
					break;
				}
			}
			break;
		}
	}
	UpdateTotal();
}
void __fastcall TForm6::DeleteClick(TObject *Sender) {
	TImage* img = dynamic_cast<TImage*>(Sender);
	if (!img || !img->Parent) return;

	TAdvPanel* panel = dynamic_cast<TAdvPanel*>(img->Parent);
	if (!panel) return;
	panel->Visible = false;
	for (int i = 0; i < cartItems.size(); i++) {
		if (cartItems[i].panel == panel) {
			cartItems.erase(cartItems.begin() + i);
			break;
		}
	}
	UpdateTotal();
}

